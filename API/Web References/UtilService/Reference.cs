//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace API.UtilService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="iUtilSoap", Namespace="http://tempuri.org/")]
    public partial class iUtil : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserTypeStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelSuperUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelGuestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStudentSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlankOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrentDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertDateTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertTimeTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertDateENOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThaiLongDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThaiLongDateWithNumberTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback LongDateTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShortDateTHOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalBMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeaningBMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback NumberArabicToThaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback StringReverseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdinalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeaderContentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertAsciiToStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback XMLReplaceSpecialCharacterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoundStangOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalAgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertStrToDoubleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileSiteExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePasscodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeToBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback DecodeBase64ToStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback UppercaseFirstOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteCommandTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransactionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemDateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserStudentWithAuthenStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListYearEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordCountPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsPersonalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsEducationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsHealthyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsFinancialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonRecordsFamilyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentRecordsToStudentCVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentRecordsToHTMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferStudentRecordsToMUStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListTitlePrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListNationalityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListReligionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListBloodGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListMaritalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListEducationalLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListEducationalBackgroundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListEducationalMajorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListEntranceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListStudentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListDistrictOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListSubdistrictOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListInstituteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstituteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListDiseasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListImpairmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListDegreeLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListFacultyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListStudentRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListTransactionLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public iUtil() {
            this.Url = global::API.Properties.Settings.Default.API_UtilService_iUtil;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserTypeStaffCompletedEventHandler GetUserTypeStaffCompleted;
        
        /// <remarks/>
        public event GetUserTypeStudentCompletedEventHandler GetUserTypeStudentCompleted;
        
        /// <remarks/>
        public event GetUserLevelAdminCompletedEventHandler GetUserLevelAdminCompleted;
        
        /// <remarks/>
        public event GetUserLevelAdminUserCompletedEventHandler GetUserLevelAdminUserCompleted;
        
        /// <remarks/>
        public event GetUserLevelSuperUserCompletedEventHandler GetUserLevelSuperUserCompleted;
        
        /// <remarks/>
        public event GetUserLevelUserCompletedEventHandler GetUserLevelUserCompleted;
        
        /// <remarks/>
        public event GetUserLevelGuestCompletedEventHandler GetUserLevelGuestCompleted;
        
        /// <remarks/>
        public event GetAccountStudentSystemCompletedEventHandler GetAccountStudentSystemCompleted;
        
        /// <remarks/>
        public event GetBlankCompletedEventHandler GetBlankCompleted;
        
        /// <remarks/>
        public event CurrentDateCompletedEventHandler CurrentDateCompleted;
        
        /// <remarks/>
        public event ConvertDateTHCompletedEventHandler ConvertDateTHCompleted;
        
        /// <remarks/>
        public event ConvertTimeTHCompletedEventHandler ConvertTimeTHCompleted;
        
        /// <remarks/>
        public event ConvertDateENCompletedEventHandler ConvertDateENCompleted;
        
        /// <remarks/>
        public event ThaiLongDateCompletedEventHandler ThaiLongDateCompleted;
        
        /// <remarks/>
        public event ThaiLongDateWithNumberTHCompletedEventHandler ThaiLongDateWithNumberTHCompleted;
        
        /// <remarks/>
        public event LongDateTHCompletedEventHandler LongDateTHCompleted;
        
        /// <remarks/>
        public event ShortDateTHCompletedEventHandler ShortDateTHCompleted;
        
        /// <remarks/>
        public event CalBMICompletedEventHandler CalBMICompleted;
        
        /// <remarks/>
        public event MeaningBMICompletedEventHandler MeaningBMICompleted;
        
        /// <remarks/>
        public event GetIPCompletedEventHandler GetIPCompleted;
        
        /// <remarks/>
        public event NumberArabicToThaiCompletedEventHandler NumberArabicToThaiCompleted;
        
        /// <remarks/>
        public event StringReverseCompletedEventHandler StringReverseCompleted;
        
        /// <remarks/>
        public event GetOrdinalCompletedEventHandler GetOrdinalCompleted;
        
        /// <remarks/>
        public event GetHeaderContentTypeCompletedEventHandler GetHeaderContentTypeCompleted;
        
        /// <remarks/>
        public event ConvertAsciiToStringCompletedEventHandler ConvertAsciiToStringCompleted;
        
        /// <remarks/>
        public event XMLReplaceSpecialCharacterCompletedEventHandler XMLReplaceSpecialCharacterCompleted;
        
        /// <remarks/>
        public event RoundStangCompletedEventHandler RoundStangCompleted;
        
        /// <remarks/>
        public event CalAgeCompletedEventHandler CalAgeCompleted;
        
        /// <remarks/>
        public event CalcDateCompletedEventHandler CalcDateCompleted;
        
        /// <remarks/>
        public event GetApplicationPathCompletedEventHandler GetApplicationPathCompleted;
        
        /// <remarks/>
        public event ConvertStrToDoubleCompletedEventHandler ConvertStrToDoubleCompleted;
        
        /// <remarks/>
        public event FileSiteExistCompletedEventHandler FileSiteExistCompleted;
        
        /// <remarks/>
        public event GeneratePasscodeCompletedEventHandler GeneratePasscodeCompleted;
        
        /// <remarks/>
        public event GetFullNameCompletedEventHandler GetFullNameCompleted;
        
        /// <remarks/>
        public event EncodeToBase64CompletedEventHandler EncodeToBase64Completed;
        
        /// <remarks/>
        public event DecodeBase64ToStringCompletedEventHandler DecodeBase64ToStringCompleted;
        
        /// <remarks/>
        public event UppercaseFirstCompletedEventHandler UppercaseFirstCompleted;
        
        /// <remarks/>
        public event ExecuteCommandTextCompletedEventHandler ExecuteCommandTextCompleted;
        
        /// <remarks/>
        public event InsertTransactionLogCompletedEventHandler InsertTransactionLogCompleted;
        
        /// <remarks/>
        public event GetSystemPermissionCompletedEventHandler GetSystemPermissionCompleted;
        
        /// <remarks/>
        public event GetSystemDateEventCompletedEventHandler GetSystemDateEventCompleted;
        
        /// <remarks/>
        public event GetUserStudentCompletedEventHandler GetUserStudentCompleted;
        
        /// <remarks/>
        public event GetUserStaffCompletedEventHandler GetUserStaffCompleted;
        
        /// <remarks/>
        public event GetUserStudentWithAuthenStaffCompletedEventHandler GetUserStudentWithAuthenStaffCompleted;
        
        /// <remarks/>
        public event GetListYearEntryCompletedEventHandler GetListYearEntryCompleted;
        
        /// <remarks/>
        public event GetRecordCountPersonCompletedEventHandler GetRecordCountPersonCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsPersonalCompletedEventHandler GetPersonRecordsPersonalCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsAddressCompletedEventHandler GetPersonRecordsAddressCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsEducationCompletedEventHandler GetPersonRecordsEducationCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsActivityCompletedEventHandler GetPersonRecordsActivityCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsHealthyCompletedEventHandler GetPersonRecordsHealthyCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsWorkCompletedEventHandler GetPersonRecordsWorkCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsFinancialCompletedEventHandler GetPersonRecordsFinancialCompleted;
        
        /// <remarks/>
        public event GetPersonRecordsFamilyCompletedEventHandler GetPersonRecordsFamilyCompleted;
        
        /// <remarks/>
        public event GetStudentRecordsCompletedEventHandler GetStudentRecordsCompleted;
        
        /// <remarks/>
        public event GetStudentRecordsToStudentCVCompletedEventHandler GetStudentRecordsToStudentCVCompleted;
        
        /// <remarks/>
        public event GetStudentRecordsToHTMLCompletedEventHandler GetStudentRecordsToHTMLCompleted;
        
        /// <remarks/>
        public event TransferStudentRecordsToMUStudentCompletedEventHandler TransferStudentRecordsToMUStudentCompleted;
        
        /// <remarks/>
        public event GetListTitlePrefixCompletedEventHandler GetListTitlePrefixCompleted;
        
        /// <remarks/>
        public event GetListGenderCompletedEventHandler GetListGenderCompleted;
        
        /// <remarks/>
        public event GetListNationalityCompletedEventHandler GetListNationalityCompleted;
        
        /// <remarks/>
        public event GetListReligionCompletedEventHandler GetListReligionCompleted;
        
        /// <remarks/>
        public event GetListBloodGroupCompletedEventHandler GetListBloodGroupCompleted;
        
        /// <remarks/>
        public event GetListMaritalStatusCompletedEventHandler GetListMaritalStatusCompleted;
        
        /// <remarks/>
        public event GetListRelationshipCompletedEventHandler GetListRelationshipCompleted;
        
        /// <remarks/>
        public event GetListAgencyCompletedEventHandler GetListAgencyCompleted;
        
        /// <remarks/>
        public event GetListEducationalLevelCompletedEventHandler GetListEducationalLevelCompleted;
        
        /// <remarks/>
        public event GetListEducationalBackgroundCompletedEventHandler GetListEducationalBackgroundCompleted;
        
        /// <remarks/>
        public event GetListEducationalMajorCompletedEventHandler GetListEducationalMajorCompleted;
        
        /// <remarks/>
        public event GetListEntranceTypeCompletedEventHandler GetListEntranceTypeCompleted;
        
        /// <remarks/>
        public event GetListStudentStatusCompletedEventHandler GetListStudentStatusCompleted;
        
        /// <remarks/>
        public event GetListCountryCompletedEventHandler GetListCountryCompleted;
        
        /// <remarks/>
        public event GetListProvinceCompletedEventHandler GetListProvinceCompleted;
        
        /// <remarks/>
        public event GetListDistrictCompletedEventHandler GetListDistrictCompleted;
        
        /// <remarks/>
        public event GetListSubdistrictCompletedEventHandler GetListSubdistrictCompleted;
        
        /// <remarks/>
        public event GetListInstituteCompletedEventHandler GetListInstituteCompleted;
        
        /// <remarks/>
        public event GetInstituteCompletedEventHandler GetInstituteCompleted;
        
        /// <remarks/>
        public event GetListUniversityCompletedEventHandler GetListUniversityCompleted;
        
        /// <remarks/>
        public event GetListDiseasesCompletedEventHandler GetListDiseasesCompleted;
        
        /// <remarks/>
        public event GetListImpairmentsCompletedEventHandler GetListImpairmentsCompleted;
        
        /// <remarks/>
        public event GetListDegreeLevelCompletedEventHandler GetListDegreeLevelCompleted;
        
        /// <remarks/>
        public event GetListFacultyCompletedEventHandler GetListFacultyCompleted;
        
        /// <remarks/>
        public event GetListProgramCompletedEventHandler GetListProgramCompleted;
        
        /// <remarks/>
        public event GetProgramCompletedEventHandler GetProgramCompleted;
        
        /// <remarks/>
        public event GetListStudentRecordsCompletedEventHandler GetListStudentRecordsCompleted;
        
        /// <remarks/>
        public event GetListTransactionLogCompletedEventHandler GetListTransactionLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTypeStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserTypeStaff() {
            object[] results = this.Invoke("GetUserTypeStaff", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeStaffAsync() {
            this.GetUserTypeStaffAsync(null);
        }
        
        /// <remarks/>
        public void GetUserTypeStaffAsync(object userState) {
            if ((this.GetUserTypeStaffOperationCompleted == null)) {
                this.GetUserTypeStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeStaffOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeStaff", new object[0], this.GetUserTypeStaffOperationCompleted, userState);
        }
        
        private void OnGetUserTypeStaffOperationCompleted(object arg) {
            if ((this.GetUserTypeStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeStaffCompleted(this, new GetUserTypeStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTypeStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserTypeStudent() {
            object[] results = this.Invoke("GetUserTypeStudent", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeStudentAsync() {
            this.GetUserTypeStudentAsync(null);
        }
        
        /// <remarks/>
        public void GetUserTypeStudentAsync(object userState) {
            if ((this.GetUserTypeStudentOperationCompleted == null)) {
                this.GetUserTypeStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeStudentOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeStudent", new object[0], this.GetUserTypeStudentOperationCompleted, userState);
        }
        
        private void OnGetUserTypeStudentOperationCompleted(object arg) {
            if ((this.GetUserTypeStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeStudentCompleted(this, new GetUserTypeStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevelAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLevelAdmin() {
            object[] results = this.Invoke("GetUserLevelAdmin", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelAdminAsync() {
            this.GetUserLevelAdminAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLevelAdminAsync(object userState) {
            if ((this.GetUserLevelAdminOperationCompleted == null)) {
                this.GetUserLevelAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelAdminOperationCompleted);
            }
            this.InvokeAsync("GetUserLevelAdmin", new object[0], this.GetUserLevelAdminOperationCompleted, userState);
        }
        
        private void OnGetUserLevelAdminOperationCompleted(object arg) {
            if ((this.GetUserLevelAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelAdminCompleted(this, new GetUserLevelAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevelAdminUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLevelAdminUser() {
            object[] results = this.Invoke("GetUserLevelAdminUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelAdminUserAsync() {
            this.GetUserLevelAdminUserAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLevelAdminUserAsync(object userState) {
            if ((this.GetUserLevelAdminUserOperationCompleted == null)) {
                this.GetUserLevelAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelAdminUserOperationCompleted);
            }
            this.InvokeAsync("GetUserLevelAdminUser", new object[0], this.GetUserLevelAdminUserOperationCompleted, userState);
        }
        
        private void OnGetUserLevelAdminUserOperationCompleted(object arg) {
            if ((this.GetUserLevelAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelAdminUserCompleted(this, new GetUserLevelAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevelSuperUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLevelSuperUser() {
            object[] results = this.Invoke("GetUserLevelSuperUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelSuperUserAsync() {
            this.GetUserLevelSuperUserAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLevelSuperUserAsync(object userState) {
            if ((this.GetUserLevelSuperUserOperationCompleted == null)) {
                this.GetUserLevelSuperUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelSuperUserOperationCompleted);
            }
            this.InvokeAsync("GetUserLevelSuperUser", new object[0], this.GetUserLevelSuperUserOperationCompleted, userState);
        }
        
        private void OnGetUserLevelSuperUserOperationCompleted(object arg) {
            if ((this.GetUserLevelSuperUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelSuperUserCompleted(this, new GetUserLevelSuperUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevelUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLevelUser() {
            object[] results = this.Invoke("GetUserLevelUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelUserAsync() {
            this.GetUserLevelUserAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLevelUserAsync(object userState) {
            if ((this.GetUserLevelUserOperationCompleted == null)) {
                this.GetUserLevelUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelUserOperationCompleted);
            }
            this.InvokeAsync("GetUserLevelUser", new object[0], this.GetUserLevelUserOperationCompleted, userState);
        }
        
        private void OnGetUserLevelUserOperationCompleted(object arg) {
            if ((this.GetUserLevelUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelUserCompleted(this, new GetUserLevelUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevelGuest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLevelGuest() {
            object[] results = this.Invoke("GetUserLevelGuest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelGuestAsync() {
            this.GetUserLevelGuestAsync(null);
        }
        
        /// <remarks/>
        public void GetUserLevelGuestAsync(object userState) {
            if ((this.GetUserLevelGuestOperationCompleted == null)) {
                this.GetUserLevelGuestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelGuestOperationCompleted);
            }
            this.InvokeAsync("GetUserLevelGuest", new object[0], this.GetUserLevelGuestOperationCompleted, userState);
        }
        
        private void OnGetUserLevelGuestOperationCompleted(object arg) {
            if ((this.GetUserLevelGuestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelGuestCompleted(this, new GetUserLevelGuestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountStudentSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountStudentSystem(bool cookieExist, System.Data.DataSet cookieData, string userType, string systemGroup) {
            object[] results = this.Invoke("GetAccountStudentSystem", new object[] {
                        cookieExist,
                        cookieData,
                        userType,
                        systemGroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStudentSystemAsync(bool cookieExist, System.Data.DataSet cookieData, string userType, string systemGroup) {
            this.GetAccountStudentSystemAsync(cookieExist, cookieData, userType, systemGroup, null);
        }
        
        /// <remarks/>
        public void GetAccountStudentSystemAsync(bool cookieExist, System.Data.DataSet cookieData, string userType, string systemGroup, object userState) {
            if ((this.GetAccountStudentSystemOperationCompleted == null)) {
                this.GetAccountStudentSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStudentSystemOperationCompleted);
            }
            this.InvokeAsync("GetAccountStudentSystem", new object[] {
                        cookieExist,
                        cookieData,
                        userType,
                        systemGroup}, this.GetAccountStudentSystemOperationCompleted, userState);
        }
        
        private void OnGetAccountStudentSystemOperationCompleted(object arg) {
            if ((this.GetAccountStudentSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStudentSystemCompleted(this, new GetAccountStudentSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBlank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBlank(string str, string strReplace) {
            object[] results = this.Invoke("GetBlank", new object[] {
                        str,
                        strReplace});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlankAsync(string str, string strReplace) {
            this.GetBlankAsync(str, strReplace, null);
        }
        
        /// <remarks/>
        public void GetBlankAsync(string str, string strReplace, object userState) {
            if ((this.GetBlankOperationCompleted == null)) {
                this.GetBlankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlankOperationCompleted);
            }
            this.InvokeAsync("GetBlank", new object[] {
                        str,
                        strReplace}, this.GetBlankOperationCompleted, userState);
        }
        
        private void OnGetBlankOperationCompleted(object arg) {
            if ((this.GetBlankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlankCompleted(this, new GetBlankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrentDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CurrentDate(string format) {
            object[] results = this.Invoke("CurrentDate", new object[] {
                        format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentDateAsync(string format) {
            this.CurrentDateAsync(format, null);
        }
        
        /// <remarks/>
        public void CurrentDateAsync(string format, object userState) {
            if ((this.CurrentDateOperationCompleted == null)) {
                this.CurrentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentDateOperationCompleted);
            }
            this.InvokeAsync("CurrentDate", new object[] {
                        format}, this.CurrentDateOperationCompleted, userState);
        }
        
        private void OnCurrentDateOperationCompleted(object arg) {
            if ((this.CurrentDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentDateCompleted(this, new CurrentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertDateTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertDateTH(string dateEN) {
            object[] results = this.Invoke("ConvertDateTH", new object[] {
                        dateEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertDateTHAsync(string dateEN) {
            this.ConvertDateTHAsync(dateEN, null);
        }
        
        /// <remarks/>
        public void ConvertDateTHAsync(string dateEN, object userState) {
            if ((this.ConvertDateTHOperationCompleted == null)) {
                this.ConvertDateTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertDateTHOperationCompleted);
            }
            this.InvokeAsync("ConvertDateTH", new object[] {
                        dateEN}, this.ConvertDateTHOperationCompleted, userState);
        }
        
        private void OnConvertDateTHOperationCompleted(object arg) {
            if ((this.ConvertDateTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertDateTHCompleted(this, new ConvertDateTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertTimeTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertTimeTH(string dateEN) {
            object[] results = this.Invoke("ConvertTimeTH", new object[] {
                        dateEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertTimeTHAsync(string dateEN) {
            this.ConvertTimeTHAsync(dateEN, null);
        }
        
        /// <remarks/>
        public void ConvertTimeTHAsync(string dateEN, object userState) {
            if ((this.ConvertTimeTHOperationCompleted == null)) {
                this.ConvertTimeTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertTimeTHOperationCompleted);
            }
            this.InvokeAsync("ConvertTimeTH", new object[] {
                        dateEN}, this.ConvertTimeTHOperationCompleted, userState);
        }
        
        private void OnConvertTimeTHOperationCompleted(object arg) {
            if ((this.ConvertTimeTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertTimeTHCompleted(this, new ConvertTimeTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertDateEN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertDateEN(string dateTH) {
            object[] results = this.Invoke("ConvertDateEN", new object[] {
                        dateTH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertDateENAsync(string dateTH) {
            this.ConvertDateENAsync(dateTH, null);
        }
        
        /// <remarks/>
        public void ConvertDateENAsync(string dateTH, object userState) {
            if ((this.ConvertDateENOperationCompleted == null)) {
                this.ConvertDateENOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertDateENOperationCompleted);
            }
            this.InvokeAsync("ConvertDateEN", new object[] {
                        dateTH}, this.ConvertDateENOperationCompleted, userState);
        }
        
        private void OnConvertDateENOperationCompleted(object arg) {
            if ((this.ConvertDateENCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertDateENCompleted(this, new ConvertDateENCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThaiLongDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ThaiLongDate(string dateEN) {
            object[] results = this.Invoke("ThaiLongDate", new object[] {
                        dateEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ThaiLongDateAsync(string dateEN) {
            this.ThaiLongDateAsync(dateEN, null);
        }
        
        /// <remarks/>
        public void ThaiLongDateAsync(string dateEN, object userState) {
            if ((this.ThaiLongDateOperationCompleted == null)) {
                this.ThaiLongDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThaiLongDateOperationCompleted);
            }
            this.InvokeAsync("ThaiLongDate", new object[] {
                        dateEN}, this.ThaiLongDateOperationCompleted, userState);
        }
        
        private void OnThaiLongDateOperationCompleted(object arg) {
            if ((this.ThaiLongDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThaiLongDateCompleted(this, new ThaiLongDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThaiLongDateWithNumberTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ThaiLongDateWithNumberTH(string dateEN) {
            object[] results = this.Invoke("ThaiLongDateWithNumberTH", new object[] {
                        dateEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ThaiLongDateWithNumberTHAsync(string dateEN) {
            this.ThaiLongDateWithNumberTHAsync(dateEN, null);
        }
        
        /// <remarks/>
        public void ThaiLongDateWithNumberTHAsync(string dateEN, object userState) {
            if ((this.ThaiLongDateWithNumberTHOperationCompleted == null)) {
                this.ThaiLongDateWithNumberTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThaiLongDateWithNumberTHOperationCompleted);
            }
            this.InvokeAsync("ThaiLongDateWithNumberTH", new object[] {
                        dateEN}, this.ThaiLongDateWithNumberTHOperationCompleted, userState);
        }
        
        private void OnThaiLongDateWithNumberTHOperationCompleted(object arg) {
            if ((this.ThaiLongDateWithNumberTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThaiLongDateWithNumberTHCompleted(this, new ThaiLongDateWithNumberTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LongDateTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LongDateTH(string dateTH) {
            object[] results = this.Invoke("LongDateTH", new object[] {
                        dateTH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LongDateTHAsync(string dateTH) {
            this.LongDateTHAsync(dateTH, null);
        }
        
        /// <remarks/>
        public void LongDateTHAsync(string dateTH, object userState) {
            if ((this.LongDateTHOperationCompleted == null)) {
                this.LongDateTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLongDateTHOperationCompleted);
            }
            this.InvokeAsync("LongDateTH", new object[] {
                        dateTH}, this.LongDateTHOperationCompleted, userState);
        }
        
        private void OnLongDateTHOperationCompleted(object arg) {
            if ((this.LongDateTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LongDateTHCompleted(this, new LongDateTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShortDateTH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShortDateTH(string dateTH) {
            object[] results = this.Invoke("ShortDateTH", new object[] {
                        dateTH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShortDateTHAsync(string dateTH) {
            this.ShortDateTHAsync(dateTH, null);
        }
        
        /// <remarks/>
        public void ShortDateTHAsync(string dateTH, object userState) {
            if ((this.ShortDateTHOperationCompleted == null)) {
                this.ShortDateTHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShortDateTHOperationCompleted);
            }
            this.InvokeAsync("ShortDateTH", new object[] {
                        dateTH}, this.ShortDateTHOperationCompleted, userState);
        }
        
        private void OnShortDateTHOperationCompleted(object arg) {
            if ((this.ShortDateTHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShortDateTHCompleted(this, new ShortDateTHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalBMI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CalBMI(string weight, string height) {
            object[] results = this.Invoke("CalBMI", new object[] {
                        weight,
                        height});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalBMIAsync(string weight, string height) {
            this.CalBMIAsync(weight, height, null);
        }
        
        /// <remarks/>
        public void CalBMIAsync(string weight, string height, object userState) {
            if ((this.CalBMIOperationCompleted == null)) {
                this.CalBMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalBMIOperationCompleted);
            }
            this.InvokeAsync("CalBMI", new object[] {
                        weight,
                        height}, this.CalBMIOperationCompleted, userState);
        }
        
        private void OnCalBMIOperationCompleted(object arg) {
            if ((this.CalBMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalBMICompleted(this, new CalBMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MeaningBMI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MeaningBMI(double bmi) {
            object[] results = this.Invoke("MeaningBMI", new object[] {
                        bmi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MeaningBMIAsync(double bmi) {
            this.MeaningBMIAsync(bmi, null);
        }
        
        /// <remarks/>
        public void MeaningBMIAsync(double bmi, object userState) {
            if ((this.MeaningBMIOperationCompleted == null)) {
                this.MeaningBMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeaningBMIOperationCompleted);
            }
            this.InvokeAsync("MeaningBMI", new object[] {
                        bmi}, this.MeaningBMIOperationCompleted, userState);
        }
        
        private void OnMeaningBMIOperationCompleted(object arg) {
            if ((this.MeaningBMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeaningBMICompleted(this, new MeaningBMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIP() {
            object[] results = this.Invoke("GetIP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIPAsync() {
            this.GetIPAsync(null);
        }
        
        /// <remarks/>
        public void GetIPAsync(object userState) {
            if ((this.GetIPOperationCompleted == null)) {
                this.GetIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPOperationCompleted);
            }
            this.InvokeAsync("GetIP", new object[0], this.GetIPOperationCompleted, userState);
        }
        
        private void OnGetIPOperationCompleted(object arg) {
            if ((this.GetIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPCompleted(this, new GetIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NumberArabicToThai", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NumberArabicToThai(string number) {
            object[] results = this.Invoke("NumberArabicToThai", new object[] {
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NumberArabicToThaiAsync(string number) {
            this.NumberArabicToThaiAsync(number, null);
        }
        
        /// <remarks/>
        public void NumberArabicToThaiAsync(string number, object userState) {
            if ((this.NumberArabicToThaiOperationCompleted == null)) {
                this.NumberArabicToThaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNumberArabicToThaiOperationCompleted);
            }
            this.InvokeAsync("NumberArabicToThai", new object[] {
                        number}, this.NumberArabicToThaiOperationCompleted, userState);
        }
        
        private void OnNumberArabicToThaiOperationCompleted(object arg) {
            if ((this.NumberArabicToThaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NumberArabicToThaiCompleted(this, new NumberArabicToThaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StringReverse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StringReverse(string str) {
            object[] results = this.Invoke("StringReverse", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StringReverseAsync(string str) {
            this.StringReverseAsync(str, null);
        }
        
        /// <remarks/>
        public void StringReverseAsync(string str, object userState) {
            if ((this.StringReverseOperationCompleted == null)) {
                this.StringReverseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStringReverseOperationCompleted);
            }
            this.InvokeAsync("StringReverse", new object[] {
                        str}, this.StringReverseOperationCompleted, userState);
        }
        
        private void OnStringReverseOperationCompleted(object arg) {
            if ((this.StringReverseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StringReverseCompleted(this, new StringReverseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdinal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrdinal(string num) {
            object[] results = this.Invoke("GetOrdinal", new object[] {
                        num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdinalAsync(string num) {
            this.GetOrdinalAsync(num, null);
        }
        
        /// <remarks/>
        public void GetOrdinalAsync(string num, object userState) {
            if ((this.GetOrdinalOperationCompleted == null)) {
                this.GetOrdinalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdinalOperationCompleted);
            }
            this.InvokeAsync("GetOrdinal", new object[] {
                        num}, this.GetOrdinalOperationCompleted, userState);
        }
        
        private void OnGetOrdinalOperationCompleted(object arg) {
            if ((this.GetOrdinalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdinalCompleted(this, new GetOrdinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHeaderContentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHeaderContentType(string fileExtension) {
            object[] results = this.Invoke("GetHeaderContentType", new object[] {
                        fileExtension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeaderContentTypeAsync(string fileExtension) {
            this.GetHeaderContentTypeAsync(fileExtension, null);
        }
        
        /// <remarks/>
        public void GetHeaderContentTypeAsync(string fileExtension, object userState) {
            if ((this.GetHeaderContentTypeOperationCompleted == null)) {
                this.GetHeaderContentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeaderContentTypeOperationCompleted);
            }
            this.InvokeAsync("GetHeaderContentType", new object[] {
                        fileExtension}, this.GetHeaderContentTypeOperationCompleted, userState);
        }
        
        private void OnGetHeaderContentTypeOperationCompleted(object arg) {
            if ((this.GetHeaderContentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeaderContentTypeCompleted(this, new GetHeaderContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertAsciiToString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertAsciiToString(string str) {
            object[] results = this.Invoke("ConvertAsciiToString", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertAsciiToStringAsync(string str) {
            this.ConvertAsciiToStringAsync(str, null);
        }
        
        /// <remarks/>
        public void ConvertAsciiToStringAsync(string str, object userState) {
            if ((this.ConvertAsciiToStringOperationCompleted == null)) {
                this.ConvertAsciiToStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertAsciiToStringOperationCompleted);
            }
            this.InvokeAsync("ConvertAsciiToString", new object[] {
                        str}, this.ConvertAsciiToStringOperationCompleted, userState);
        }
        
        private void OnConvertAsciiToStringOperationCompleted(object arg) {
            if ((this.ConvertAsciiToStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertAsciiToStringCompleted(this, new ConvertAsciiToStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XMLReplaceSpecialCharacter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string XMLReplaceSpecialCharacter(string xml) {
            object[] results = this.Invoke("XMLReplaceSpecialCharacter", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void XMLReplaceSpecialCharacterAsync(string xml) {
            this.XMLReplaceSpecialCharacterAsync(xml, null);
        }
        
        /// <remarks/>
        public void XMLReplaceSpecialCharacterAsync(string xml, object userState) {
            if ((this.XMLReplaceSpecialCharacterOperationCompleted == null)) {
                this.XMLReplaceSpecialCharacterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXMLReplaceSpecialCharacterOperationCompleted);
            }
            this.InvokeAsync("XMLReplaceSpecialCharacter", new object[] {
                        xml}, this.XMLReplaceSpecialCharacterOperationCompleted, userState);
        }
        
        private void OnXMLReplaceSpecialCharacterOperationCompleted(object arg) {
            if ((this.XMLReplaceSpecialCharacterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XMLReplaceSpecialCharacterCompleted(this, new XMLReplaceSpecialCharacterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoundStang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RoundStang(double number) {
            object[] results = this.Invoke("RoundStang", new object[] {
                        number});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RoundStangAsync(double number) {
            this.RoundStangAsync(number, null);
        }
        
        /// <remarks/>
        public void RoundStangAsync(double number, object userState) {
            if ((this.RoundStangOperationCompleted == null)) {
                this.RoundStangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoundStangOperationCompleted);
            }
            this.InvokeAsync("RoundStang", new object[] {
                        number}, this.RoundStangOperationCompleted, userState);
        }
        
        private void OnRoundStangOperationCompleted(object arg) {
            if ((this.RoundStangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoundStangCompleted(this, new RoundStangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalAge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double[] CalAge(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("CalAge", new object[] {
                        startDate,
                        endDate});
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        public void CalAgeAsync(System.DateTime startDate, System.DateTime endDate) {
            this.CalAgeAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void CalAgeAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.CalAgeOperationCompleted == null)) {
                this.CalAgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalAgeOperationCompleted);
            }
            this.InvokeAsync("CalAge", new object[] {
                        startDate,
                        endDate}, this.CalAgeOperationCompleted, userState);
        }
        
        private void OnCalAgeOperationCompleted(object arg) {
            if ((this.CalAgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalAgeCompleted(this, new CalAgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalcDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double[] CalcDate(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("CalcDate", new object[] {
                        startDate,
                        endDate});
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        public void CalcDateAsync(System.DateTime startDate, System.DateTime endDate) {
            this.CalcDateAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void CalcDateAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.CalcDateOperationCompleted == null)) {
                this.CalcDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcDateOperationCompleted);
            }
            this.InvokeAsync("CalcDate", new object[] {
                        startDate,
                        endDate}, this.CalcDateOperationCompleted, userState);
        }
        
        private void OnCalcDateOperationCompleted(object arg) {
            if ((this.CalcDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcDateCompleted(this, new CalcDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationPath() {
            object[] results = this.Invoke("GetApplicationPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationPathAsync() {
            this.GetApplicationPathAsync(null);
        }
        
        /// <remarks/>
        public void GetApplicationPathAsync(object userState) {
            if ((this.GetApplicationPathOperationCompleted == null)) {
                this.GetApplicationPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationPathOperationCompleted);
            }
            this.InvokeAsync("GetApplicationPath", new object[0], this.GetApplicationPathOperationCompleted, userState);
        }
        
        private void OnGetApplicationPathOperationCompleted(object arg) {
            if ((this.GetApplicationPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationPathCompleted(this, new GetApplicationPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertStrToDouble", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConvertStrToDouble(string m) {
            object[] results = this.Invoke("ConvertStrToDouble", new object[] {
                        m});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertStrToDoubleAsync(string m) {
            this.ConvertStrToDoubleAsync(m, null);
        }
        
        /// <remarks/>
        public void ConvertStrToDoubleAsync(string m, object userState) {
            if ((this.ConvertStrToDoubleOperationCompleted == null)) {
                this.ConvertStrToDoubleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertStrToDoubleOperationCompleted);
            }
            this.InvokeAsync("ConvertStrToDouble", new object[] {
                        m}, this.ConvertStrToDoubleOperationCompleted, userState);
        }
        
        private void OnConvertStrToDoubleOperationCompleted(object arg) {
            if ((this.ConvertStrToDoubleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertStrToDoubleCompleted(this, new ConvertStrToDoubleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileSiteExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileSiteExist(string file) {
            object[] results = this.Invoke("FileSiteExist", new object[] {
                        file});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileSiteExistAsync(string file) {
            this.FileSiteExistAsync(file, null);
        }
        
        /// <remarks/>
        public void FileSiteExistAsync(string file, object userState) {
            if ((this.FileSiteExistOperationCompleted == null)) {
                this.FileSiteExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileSiteExistOperationCompleted);
            }
            this.InvokeAsync("FileSiteExist", new object[] {
                        file}, this.FileSiteExistOperationCompleted, userState);
        }
        
        private void OnFileSiteExistOperationCompleted(object arg) {
            if ((this.FileSiteExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileSiteExistCompleted(this, new FileSiteExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneratePasscode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GeneratePasscode(int lenChars, int lenNonAlphaNumericChars) {
            object[] results = this.Invoke("GeneratePasscode", new object[] {
                        lenChars,
                        lenNonAlphaNumericChars});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePasscodeAsync(int lenChars, int lenNonAlphaNumericChars) {
            this.GeneratePasscodeAsync(lenChars, lenNonAlphaNumericChars, null);
        }
        
        /// <remarks/>
        public void GeneratePasscodeAsync(int lenChars, int lenNonAlphaNumericChars, object userState) {
            if ((this.GeneratePasscodeOperationCompleted == null)) {
                this.GeneratePasscodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePasscodeOperationCompleted);
            }
            this.InvokeAsync("GeneratePasscode", new object[] {
                        lenChars,
                        lenNonAlphaNumericChars}, this.GeneratePasscodeOperationCompleted, userState);
        }
        
        private void OnGeneratePasscodeOperationCompleted(object arg) {
            if ((this.GeneratePasscodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePasscodeCompleted(this, new GeneratePasscodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFullName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFullName(string titlePrefix, string titlePrefixOther, string firstName, string middleName, string lastName) {
            object[] results = this.Invoke("GetFullName", new object[] {
                        titlePrefix,
                        titlePrefixOther,
                        firstName,
                        middleName,
                        lastName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullNameAsync(string titlePrefix, string titlePrefixOther, string firstName, string middleName, string lastName) {
            this.GetFullNameAsync(titlePrefix, titlePrefixOther, firstName, middleName, lastName, null);
        }
        
        /// <remarks/>
        public void GetFullNameAsync(string titlePrefix, string titlePrefixOther, string firstName, string middleName, string lastName, object userState) {
            if ((this.GetFullNameOperationCompleted == null)) {
                this.GetFullNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullNameOperationCompleted);
            }
            this.InvokeAsync("GetFullName", new object[] {
                        titlePrefix,
                        titlePrefixOther,
                        firstName,
                        middleName,
                        lastName}, this.GetFullNameOperationCompleted, userState);
        }
        
        private void OnGetFullNameOperationCompleted(object arg) {
            if ((this.GetFullNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullNameCompleted(this, new GetFullNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeToBase64", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EncodeToBase64(string str) {
            object[] results = this.Invoke("EncodeToBase64", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeToBase64Async(string str) {
            this.EncodeToBase64Async(str, null);
        }
        
        /// <remarks/>
        public void EncodeToBase64Async(string str, object userState) {
            if ((this.EncodeToBase64OperationCompleted == null)) {
                this.EncodeToBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeToBase64OperationCompleted);
            }
            this.InvokeAsync("EncodeToBase64", new object[] {
                        str}, this.EncodeToBase64OperationCompleted, userState);
        }
        
        private void OnEncodeToBase64OperationCompleted(object arg) {
            if ((this.EncodeToBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeToBase64Completed(this, new EncodeToBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DecodeBase64ToString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DecodeBase64ToString(string base64String) {
            object[] results = this.Invoke("DecodeBase64ToString", new object[] {
                        base64String});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecodeBase64ToStringAsync(string base64String) {
            this.DecodeBase64ToStringAsync(base64String, null);
        }
        
        /// <remarks/>
        public void DecodeBase64ToStringAsync(string base64String, object userState) {
            if ((this.DecodeBase64ToStringOperationCompleted == null)) {
                this.DecodeBase64ToStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecodeBase64ToStringOperationCompleted);
            }
            this.InvokeAsync("DecodeBase64ToString", new object[] {
                        base64String}, this.DecodeBase64ToStringOperationCompleted, userState);
        }
        
        private void OnDecodeBase64ToStringOperationCompleted(object arg) {
            if ((this.DecodeBase64ToStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecodeBase64ToStringCompleted(this, new DecodeBase64ToStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UppercaseFirst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UppercaseFirst(string s) {
            object[] results = this.Invoke("UppercaseFirst", new object[] {
                        s});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UppercaseFirstAsync(string s) {
            this.UppercaseFirstAsync(s, null);
        }
        
        /// <remarks/>
        public void UppercaseFirstAsync(string s, object userState) {
            if ((this.UppercaseFirstOperationCompleted == null)) {
                this.UppercaseFirstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUppercaseFirstOperationCompleted);
            }
            this.InvokeAsync("UppercaseFirst", new object[] {
                        s}, this.UppercaseFirstOperationCompleted, userState);
        }
        
        private void OnUppercaseFirstOperationCompleted(object arg) {
            if ((this.UppercaseFirstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UppercaseFirstCompleted(this, new UppercaseFirstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteCommandText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteCommandText(string connString, string cmdText) {
            this.Invoke("ExecuteCommandText", new object[] {
                        connString,
                        cmdText});
        }
        
        /// <remarks/>
        public void ExecuteCommandTextAsync(string connString, string cmdText) {
            this.ExecuteCommandTextAsync(connString, cmdText, null);
        }
        
        /// <remarks/>
        public void ExecuteCommandTextAsync(string connString, string cmdText, object userState) {
            if ((this.ExecuteCommandTextOperationCompleted == null)) {
                this.ExecuteCommandTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteCommandTextOperationCompleted);
            }
            this.InvokeAsync("ExecuteCommandText", new object[] {
                        connString,
                        cmdText}, this.ExecuteCommandTextOperationCompleted, userState);
        }
        
        private void OnExecuteCommandTextOperationCompleted(object arg) {
            if ((this.ExecuteCommandTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCommandTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTransactionLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertTransactionLog(string connString, string tableTransactionLog, string tableErrorLog, string logAction, string logValue, string logActionBy) {
            object[] results = this.Invoke("InsertTransactionLog", new object[] {
                        connString,
                        tableTransactionLog,
                        tableErrorLog,
                        logAction,
                        logValue,
                        logActionBy});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTransactionLogAsync(string connString, string tableTransactionLog, string tableErrorLog, string logAction, string logValue, string logActionBy) {
            this.InsertTransactionLogAsync(connString, tableTransactionLog, tableErrorLog, logAction, logValue, logActionBy, null);
        }
        
        /// <remarks/>
        public void InsertTransactionLogAsync(string connString, string tableTransactionLog, string tableErrorLog, string logAction, string logValue, string logActionBy, object userState) {
            if ((this.InsertTransactionLogOperationCompleted == null)) {
                this.InsertTransactionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransactionLogOperationCompleted);
            }
            this.InvokeAsync("InsertTransactionLog", new object[] {
                        connString,
                        tableTransactionLog,
                        tableErrorLog,
                        logAction,
                        logValue,
                        logActionBy}, this.InsertTransactionLogOperationCompleted, userState);
        }
        
        private void OnInsertTransactionLogOperationCompleted(object arg) {
            if ((this.InsertTransactionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransactionLogCompleted(this, new InsertTransactionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSystemPermission(string connString, string systemGroup) {
            object[] results = this.Invoke("GetSystemPermission", new object[] {
                        connString,
                        systemGroup});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemPermissionAsync(string connString, string systemGroup) {
            this.GetSystemPermissionAsync(connString, systemGroup, null);
        }
        
        /// <remarks/>
        public void GetSystemPermissionAsync(string connString, string systemGroup, object userState) {
            if ((this.GetSystemPermissionOperationCompleted == null)) {
                this.GetSystemPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemPermissionOperationCompleted);
            }
            this.InvokeAsync("GetSystemPermission", new object[] {
                        connString,
                        systemGroup}, this.GetSystemPermissionOperationCompleted, userState);
        }
        
        private void OnGetSystemPermissionOperationCompleted(object arg) {
            if ((this.GetSystemPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemPermissionCompleted(this, new GetSystemPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemDateEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSystemDateEvent(string connString, string systemGroup) {
            object[] results = this.Invoke("GetSystemDateEvent", new object[] {
                        connString,
                        systemGroup});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemDateEventAsync(string connString, string systemGroup) {
            this.GetSystemDateEventAsync(connString, systemGroup, null);
        }
        
        /// <remarks/>
        public void GetSystemDateEventAsync(string connString, string systemGroup, object userState) {
            if ((this.GetSystemDateEventOperationCompleted == null)) {
                this.GetSystemDateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDateEventOperationCompleted);
            }
            this.InvokeAsync("GetSystemDateEvent", new object[] {
                        connString,
                        systemGroup}, this.GetSystemDateEventOperationCompleted, userState);
        }
        
        private void OnGetSystemDateEventOperationCompleted(object arg) {
            if ((this.GetSystemDateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemDateEventCompleted(this, new GetSystemDateEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserStudent(string connString, string personId) {
            object[] results = this.Invoke("GetUserStudent", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserStudentAsync(string connString, string personId) {
            this.GetUserStudentAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetUserStudentAsync(string connString, string personId, object userState) {
            if ((this.GetUserStudentOperationCompleted == null)) {
                this.GetUserStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserStudentOperationCompleted);
            }
            this.InvokeAsync("GetUserStudent", new object[] {
                        connString,
                        personId}, this.GetUserStudentOperationCompleted, userState);
        }
        
        private void OnGetUserStudentOperationCompleted(object arg) {
            if ((this.GetUserStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserStudentCompleted(this, new GetUserStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserStaff(string connString, string username, string userlevel, string systemGroup) {
            object[] results = this.Invoke("GetUserStaff", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserStaffAsync(string connString, string username, string userlevel, string systemGroup) {
            this.GetUserStaffAsync(connString, username, userlevel, systemGroup, null);
        }
        
        /// <remarks/>
        public void GetUserStaffAsync(string connString, string username, string userlevel, string systemGroup, object userState) {
            if ((this.GetUserStaffOperationCompleted == null)) {
                this.GetUserStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserStaffOperationCompleted);
            }
            this.InvokeAsync("GetUserStaff", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup}, this.GetUserStaffOperationCompleted, userState);
        }
        
        private void OnGetUserStaffOperationCompleted(object arg) {
            if ((this.GetUserStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserStaffCompleted(this, new GetUserStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserStudentWithAuthenStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserStudentWithAuthenStaff(string connString, string username, string userlevel, string systemGroup, string personId) {
            object[] results = this.Invoke("GetUserStudentWithAuthenStaff", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserStudentWithAuthenStaffAsync(string connString, string username, string userlevel, string systemGroup, string personId) {
            this.GetUserStudentWithAuthenStaffAsync(connString, username, userlevel, systemGroup, personId, null);
        }
        
        /// <remarks/>
        public void GetUserStudentWithAuthenStaffAsync(string connString, string username, string userlevel, string systemGroup, string personId, object userState) {
            if ((this.GetUserStudentWithAuthenStaffOperationCompleted == null)) {
                this.GetUserStudentWithAuthenStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserStudentWithAuthenStaffOperationCompleted);
            }
            this.InvokeAsync("GetUserStudentWithAuthenStaff", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        personId}, this.GetUserStudentWithAuthenStaffOperationCompleted, userState);
        }
        
        private void OnGetUserStudentWithAuthenStaffOperationCompleted(object arg) {
            if ((this.GetUserStudentWithAuthenStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserStudentWithAuthenStaffCompleted(this, new GetUserStudentWithAuthenStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListYearEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListYearEntry(string connString) {
            object[] results = this.Invoke("GetListYearEntry", new object[] {
                        connString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListYearEntryAsync(string connString) {
            this.GetListYearEntryAsync(connString, null);
        }
        
        /// <remarks/>
        public void GetListYearEntryAsync(string connString, object userState) {
            if ((this.GetListYearEntryOperationCompleted == null)) {
                this.GetListYearEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListYearEntryOperationCompleted);
            }
            this.InvokeAsync("GetListYearEntry", new object[] {
                        connString}, this.GetListYearEntryOperationCompleted, userState);
        }
        
        private void OnGetListYearEntryOperationCompleted(object arg) {
            if ((this.GetListYearEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListYearEntryCompleted(this, new GetListYearEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecordCountPerson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRecordCountPerson(string connString, string personId) {
            object[] results = this.Invoke("GetRecordCountPerson", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordCountPersonAsync(string connString, string personId) {
            this.GetRecordCountPersonAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetRecordCountPersonAsync(string connString, string personId, object userState) {
            if ((this.GetRecordCountPersonOperationCompleted == null)) {
                this.GetRecordCountPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordCountPersonOperationCompleted);
            }
            this.InvokeAsync("GetRecordCountPerson", new object[] {
                        connString,
                        personId}, this.GetRecordCountPersonOperationCompleted, userState);
        }
        
        private void OnGetRecordCountPersonOperationCompleted(object arg) {
            if ((this.GetRecordCountPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordCountPersonCompleted(this, new GetRecordCountPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsPersonal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsPersonal(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsPersonal", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsPersonalAsync(string connString, string personId) {
            this.GetPersonRecordsPersonalAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsPersonalAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsPersonalOperationCompleted == null)) {
                this.GetPersonRecordsPersonalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsPersonalOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsPersonal", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsPersonalOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsPersonalOperationCompleted(object arg) {
            if ((this.GetPersonRecordsPersonalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsPersonalCompleted(this, new GetPersonRecordsPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsAddress(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsAddress", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsAddressAsync(string connString, string personId) {
            this.GetPersonRecordsAddressAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsAddressAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsAddressOperationCompleted == null)) {
                this.GetPersonRecordsAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsAddressOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsAddress", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsAddressOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsAddressOperationCompleted(object arg) {
            if ((this.GetPersonRecordsAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsAddressCompleted(this, new GetPersonRecordsAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsEducation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsEducation(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsEducation", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsEducationAsync(string connString, string personId) {
            this.GetPersonRecordsEducationAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsEducationAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsEducationOperationCompleted == null)) {
                this.GetPersonRecordsEducationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsEducationOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsEducation", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsEducationOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsEducationOperationCompleted(object arg) {
            if ((this.GetPersonRecordsEducationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsEducationCompleted(this, new GetPersonRecordsEducationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsActivity(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsActivity", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsActivityAsync(string connString, string personId) {
            this.GetPersonRecordsActivityAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsActivityAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsActivityOperationCompleted == null)) {
                this.GetPersonRecordsActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsActivityOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsActivity", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsActivityOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsActivityOperationCompleted(object arg) {
            if ((this.GetPersonRecordsActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsActivityCompleted(this, new GetPersonRecordsActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsHealthy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsHealthy(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsHealthy", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsHealthyAsync(string connString, string personId) {
            this.GetPersonRecordsHealthyAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsHealthyAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsHealthyOperationCompleted == null)) {
                this.GetPersonRecordsHealthyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsHealthyOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsHealthy", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsHealthyOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsHealthyOperationCompleted(object arg) {
            if ((this.GetPersonRecordsHealthyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsHealthyCompleted(this, new GetPersonRecordsHealthyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsWork(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsWork", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsWorkAsync(string connString, string personId) {
            this.GetPersonRecordsWorkAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsWorkAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsWorkOperationCompleted == null)) {
                this.GetPersonRecordsWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsWorkOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsWork", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsWorkOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsWorkOperationCompleted(object arg) {
            if ((this.GetPersonRecordsWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsWorkCompleted(this, new GetPersonRecordsWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsFinancial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsFinancial(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsFinancial", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsFinancialAsync(string connString, string personId) {
            this.GetPersonRecordsFinancialAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsFinancialAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsFinancialOperationCompleted == null)) {
                this.GetPersonRecordsFinancialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsFinancialOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsFinancial", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsFinancialOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsFinancialOperationCompleted(object arg) {
            if ((this.GetPersonRecordsFinancialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsFinancialCompleted(this, new GetPersonRecordsFinancialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonRecordsFamily", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonRecordsFamily(string connString, string personId) {
            object[] results = this.Invoke("GetPersonRecordsFamily", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonRecordsFamilyAsync(string connString, string personId) {
            this.GetPersonRecordsFamilyAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetPersonRecordsFamilyAsync(string connString, string personId, object userState) {
            if ((this.GetPersonRecordsFamilyOperationCompleted == null)) {
                this.GetPersonRecordsFamilyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonRecordsFamilyOperationCompleted);
            }
            this.InvokeAsync("GetPersonRecordsFamily", new object[] {
                        connString,
                        personId}, this.GetPersonRecordsFamilyOperationCompleted, userState);
        }
        
        private void OnGetPersonRecordsFamilyOperationCompleted(object arg) {
            if ((this.GetPersonRecordsFamilyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonRecordsFamilyCompleted(this, new GetPersonRecordsFamilyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStudentRecords(string connString, string personId) {
            object[] results = this.Invoke("GetStudentRecords", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentRecordsAsync(string connString, string personId) {
            this.GetStudentRecordsAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetStudentRecordsAsync(string connString, string personId, object userState) {
            if ((this.GetStudentRecordsOperationCompleted == null)) {
                this.GetStudentRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentRecordsOperationCompleted);
            }
            this.InvokeAsync("GetStudentRecords", new object[] {
                        connString,
                        personId}, this.GetStudentRecordsOperationCompleted, userState);
        }
        
        private void OnGetStudentRecordsOperationCompleted(object arg) {
            if ((this.GetStudentRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentRecordsCompleted(this, new GetStudentRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentRecordsToStudentCV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStudentRecordsToStudentCV(string connString, string personId) {
            object[] results = this.Invoke("GetStudentRecordsToStudentCV", new object[] {
                        connString,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentRecordsToStudentCVAsync(string connString, string personId) {
            this.GetStudentRecordsToStudentCVAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetStudentRecordsToStudentCVAsync(string connString, string personId, object userState) {
            if ((this.GetStudentRecordsToStudentCVOperationCompleted == null)) {
                this.GetStudentRecordsToStudentCVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentRecordsToStudentCVOperationCompleted);
            }
            this.InvokeAsync("GetStudentRecordsToStudentCV", new object[] {
                        connString,
                        personId}, this.GetStudentRecordsToStudentCVOperationCompleted, userState);
        }
        
        private void OnGetStudentRecordsToStudentCVOperationCompleted(object arg) {
            if ((this.GetStudentRecordsToStudentCVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentRecordsToStudentCVCompleted(this, new GetStudentRecordsToStudentCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentRecordsToHTML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStudentRecordsToHTML(string connString, string personId) {
            object[] results = this.Invoke("GetStudentRecordsToHTML", new object[] {
                        connString,
                        personId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentRecordsToHTMLAsync(string connString, string personId) {
            this.GetStudentRecordsToHTMLAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void GetStudentRecordsToHTMLAsync(string connString, string personId, object userState) {
            if ((this.GetStudentRecordsToHTMLOperationCompleted == null)) {
                this.GetStudentRecordsToHTMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentRecordsToHTMLOperationCompleted);
            }
            this.InvokeAsync("GetStudentRecordsToHTML", new object[] {
                        connString,
                        personId}, this.GetStudentRecordsToHTMLOperationCompleted, userState);
        }
        
        private void OnGetStudentRecordsToHTMLOperationCompleted(object arg) {
            if ((this.GetStudentRecordsToHTMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentRecordsToHTMLCompleted(this, new GetStudentRecordsToHTMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferStudentRecordsToMUStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferStudentRecordsToMUStudent(string connString, string personId) {
            this.Invoke("TransferStudentRecordsToMUStudent", new object[] {
                        connString,
                        personId});
        }
        
        /// <remarks/>
        public void TransferStudentRecordsToMUStudentAsync(string connString, string personId) {
            this.TransferStudentRecordsToMUStudentAsync(connString, personId, null);
        }
        
        /// <remarks/>
        public void TransferStudentRecordsToMUStudentAsync(string connString, string personId, object userState) {
            if ((this.TransferStudentRecordsToMUStudentOperationCompleted == null)) {
                this.TransferStudentRecordsToMUStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferStudentRecordsToMUStudentOperationCompleted);
            }
            this.InvokeAsync("TransferStudentRecordsToMUStudent", new object[] {
                        connString,
                        personId}, this.TransferStudentRecordsToMUStudentOperationCompleted, userState);
        }
        
        private void OnTransferStudentRecordsToMUStudentOperationCompleted(object arg) {
            if ((this.TransferStudentRecordsToMUStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferStudentRecordsToMUStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListTitlePrefix", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListTitlePrefix(string connString, string keyword, string gender, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListTitlePrefix", new object[] {
                        connString,
                        keyword,
                        gender,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListTitlePrefixAsync(string connString, string keyword, string gender, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListTitlePrefixAsync(connString, keyword, gender, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListTitlePrefixAsync(string connString, string keyword, string gender, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListTitlePrefixOperationCompleted == null)) {
                this.GetListTitlePrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListTitlePrefixOperationCompleted);
            }
            this.InvokeAsync("GetListTitlePrefix", new object[] {
                        connString,
                        keyword,
                        gender,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListTitlePrefixOperationCompleted, userState);
        }
        
        private void OnGetListTitlePrefixOperationCompleted(object arg) {
            if ((this.GetListTitlePrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListTitlePrefixCompleted(this, new GetListTitlePrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListGender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListGender(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListGender", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListGenderAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListGenderAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListGenderAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListGenderOperationCompleted == null)) {
                this.GetListGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListGenderOperationCompleted);
            }
            this.InvokeAsync("GetListGender", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListGenderOperationCompleted, userState);
        }
        
        private void OnGetListGenderOperationCompleted(object arg) {
            if ((this.GetListGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListGenderCompleted(this, new GetListGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListNationality", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListNationality(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListNationality", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListNationalityAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListNationalityAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListNationalityAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListNationalityOperationCompleted == null)) {
                this.GetListNationalityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListNationalityOperationCompleted);
            }
            this.InvokeAsync("GetListNationality", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListNationalityOperationCompleted, userState);
        }
        
        private void OnGetListNationalityOperationCompleted(object arg) {
            if ((this.GetListNationalityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListNationalityCompleted(this, new GetListNationalityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListReligion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListReligion(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListReligion", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListReligionAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListReligionAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListReligionAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListReligionOperationCompleted == null)) {
                this.GetListReligionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListReligionOperationCompleted);
            }
            this.InvokeAsync("GetListReligion", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListReligionOperationCompleted, userState);
        }
        
        private void OnGetListReligionOperationCompleted(object arg) {
            if ((this.GetListReligionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListReligionCompleted(this, new GetListReligionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListBloodGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListBloodGroup(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListBloodGroup", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListBloodGroupAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListBloodGroupAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListBloodGroupAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListBloodGroupOperationCompleted == null)) {
                this.GetListBloodGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListBloodGroupOperationCompleted);
            }
            this.InvokeAsync("GetListBloodGroup", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListBloodGroupOperationCompleted, userState);
        }
        
        private void OnGetListBloodGroupOperationCompleted(object arg) {
            if ((this.GetListBloodGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListBloodGroupCompleted(this, new GetListBloodGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListMaritalStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListMaritalStatus(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListMaritalStatus", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListMaritalStatusAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListMaritalStatusAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListMaritalStatusAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListMaritalStatusOperationCompleted == null)) {
                this.GetListMaritalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListMaritalStatusOperationCompleted);
            }
            this.InvokeAsync("GetListMaritalStatus", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListMaritalStatusOperationCompleted, userState);
        }
        
        private void OnGetListMaritalStatusOperationCompleted(object arg) {
            if ((this.GetListMaritalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListMaritalStatusCompleted(this, new GetListMaritalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListRelationship(string connString, string keyword, string gender, string relationship, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListRelationship", new object[] {
                        connString,
                        keyword,
                        gender,
                        relationship,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListRelationshipAsync(string connString, string keyword, string gender, string relationship, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListRelationshipAsync(connString, keyword, gender, relationship, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListRelationshipAsync(string connString, string keyword, string gender, string relationship, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListRelationshipOperationCompleted == null)) {
                this.GetListRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListRelationshipOperationCompleted);
            }
            this.InvokeAsync("GetListRelationship", new object[] {
                        connString,
                        keyword,
                        gender,
                        relationship,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListRelationshipOperationCompleted, userState);
        }
        
        private void OnGetListRelationshipOperationCompleted(object arg) {
            if ((this.GetListRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListRelationshipCompleted(this, new GetListRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListAgency(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListAgency", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAgencyAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListAgencyAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListAgencyAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListAgencyOperationCompleted == null)) {
                this.GetListAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListAgencyOperationCompleted);
            }
            this.InvokeAsync("GetListAgency", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListAgencyOperationCompleted, userState);
        }
        
        private void OnGetListAgencyOperationCompleted(object arg) {
            if ((this.GetListAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListAgencyCompleted(this, new GetListAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEducationalLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListEducationalLevel(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListEducationalLevel", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListEducationalLevelAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListEducationalLevelAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListEducationalLevelAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListEducationalLevelOperationCompleted == null)) {
                this.GetListEducationalLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListEducationalLevelOperationCompleted);
            }
            this.InvokeAsync("GetListEducationalLevel", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListEducationalLevelOperationCompleted, userState);
        }
        
        private void OnGetListEducationalLevelOperationCompleted(object arg) {
            if ((this.GetListEducationalLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListEducationalLevelCompleted(this, new GetListEducationalLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEducationalBackground", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListEducationalBackground(string connString, string keyword, string educationalLevel, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListEducationalBackground", new object[] {
                        connString,
                        keyword,
                        educationalLevel,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListEducationalBackgroundAsync(string connString, string keyword, string educationalLevel, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListEducationalBackgroundAsync(connString, keyword, educationalLevel, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListEducationalBackgroundAsync(string connString, string keyword, string educationalLevel, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListEducationalBackgroundOperationCompleted == null)) {
                this.GetListEducationalBackgroundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListEducationalBackgroundOperationCompleted);
            }
            this.InvokeAsync("GetListEducationalBackground", new object[] {
                        connString,
                        keyword,
                        educationalLevel,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListEducationalBackgroundOperationCompleted, userState);
        }
        
        private void OnGetListEducationalBackgroundOperationCompleted(object arg) {
            if ((this.GetListEducationalBackgroundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListEducationalBackgroundCompleted(this, new GetListEducationalBackgroundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEducationalMajor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListEducationalMajor(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListEducationalMajor", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListEducationalMajorAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListEducationalMajorAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListEducationalMajorAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListEducationalMajorOperationCompleted == null)) {
                this.GetListEducationalMajorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListEducationalMajorOperationCompleted);
            }
            this.InvokeAsync("GetListEducationalMajor", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListEducationalMajorOperationCompleted, userState);
        }
        
        private void OnGetListEducationalMajorOperationCompleted(object arg) {
            if ((this.GetListEducationalMajorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListEducationalMajorCompleted(this, new GetListEducationalMajorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEntranceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListEntranceType(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListEntranceType", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListEntranceTypeAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListEntranceTypeAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListEntranceTypeAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListEntranceTypeOperationCompleted == null)) {
                this.GetListEntranceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListEntranceTypeOperationCompleted);
            }
            this.InvokeAsync("GetListEntranceType", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListEntranceTypeOperationCompleted, userState);
        }
        
        private void OnGetListEntranceTypeOperationCompleted(object arg) {
            if ((this.GetListEntranceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListEntranceTypeCompleted(this, new GetListEntranceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListStudentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListStudentStatus(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListStudentStatus", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListStudentStatusAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListStudentStatusAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListStudentStatusAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListStudentStatusOperationCompleted == null)) {
                this.GetListStudentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListStudentStatusOperationCompleted);
            }
            this.InvokeAsync("GetListStudentStatus", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListStudentStatusOperationCompleted, userState);
        }
        
        private void OnGetListStudentStatusOperationCompleted(object arg) {
            if ((this.GetListStudentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListStudentStatusCompleted(this, new GetListStudentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListCountry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListCountry(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListCountry", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListCountryAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListCountryAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListCountryAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListCountryOperationCompleted == null)) {
                this.GetListCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListCountryOperationCompleted);
            }
            this.InvokeAsync("GetListCountry", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListCountryOperationCompleted, userState);
        }
        
        private void OnGetListCountryOperationCompleted(object arg) {
            if ((this.GetListCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCountryCompleted(this, new GetListCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListProvince", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListProvince(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListProvince", new object[] {
                        connString,
                        keyword,
                        country,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListProvinceAsync(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListProvinceAsync(connString, keyword, country, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListProvinceAsync(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListProvinceOperationCompleted == null)) {
                this.GetListProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListProvinceOperationCompleted);
            }
            this.InvokeAsync("GetListProvince", new object[] {
                        connString,
                        keyword,
                        country,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListProvinceOperationCompleted, userState);
        }
        
        private void OnGetListProvinceOperationCompleted(object arg) {
            if ((this.GetListProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListProvinceCompleted(this, new GetListProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListDistrict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListDistrict(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListDistrict", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListDistrictAsync(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListDistrictAsync(connString, keyword, country, province, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListDistrictAsync(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListDistrictOperationCompleted == null)) {
                this.GetListDistrictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListDistrictOperationCompleted);
            }
            this.InvokeAsync("GetListDistrict", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListDistrictOperationCompleted, userState);
        }
        
        private void OnGetListDistrictOperationCompleted(object arg) {
            if ((this.GetListDistrictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListDistrictCompleted(this, new GetListDistrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListSubdistrict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListSubdistrict(string connString, string keyword, string country, string province, string district, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListSubdistrict", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        district,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListSubdistrictAsync(string connString, string keyword, string country, string province, string district, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListSubdistrictAsync(connString, keyword, country, province, district, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListSubdistrictAsync(string connString, string keyword, string country, string province, string district, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListSubdistrictOperationCompleted == null)) {
                this.GetListSubdistrictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListSubdistrictOperationCompleted);
            }
            this.InvokeAsync("GetListSubdistrict", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        district,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListSubdistrictOperationCompleted, userState);
        }
        
        private void OnGetListSubdistrictOperationCompleted(object arg) {
            if ((this.GetListSubdistrictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListSubdistrictCompleted(this, new GetListSubdistrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListInstitute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListInstitute(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListInstitute", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListInstituteAsync(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListInstituteAsync(connString, keyword, country, province, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListInstituteAsync(string connString, string keyword, string country, string province, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListInstituteOperationCompleted == null)) {
                this.GetListInstituteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListInstituteOperationCompleted);
            }
            this.InvokeAsync("GetListInstitute", new object[] {
                        connString,
                        keyword,
                        country,
                        province,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListInstituteOperationCompleted, userState);
        }
        
        private void OnGetListInstituteOperationCompleted(object arg) {
            if ((this.GetListInstituteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListInstituteCompleted(this, new GetListInstituteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstitute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstitute(string connString, string id) {
            object[] results = this.Invoke("GetInstitute", new object[] {
                        connString,
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstituteAsync(string connString, string id) {
            this.GetInstituteAsync(connString, id, null);
        }
        
        /// <remarks/>
        public void GetInstituteAsync(string connString, string id, object userState) {
            if ((this.GetInstituteOperationCompleted == null)) {
                this.GetInstituteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstituteOperationCompleted);
            }
            this.InvokeAsync("GetInstitute", new object[] {
                        connString,
                        id}, this.GetInstituteOperationCompleted, userState);
        }
        
        private void OnGetInstituteOperationCompleted(object arg) {
            if ((this.GetInstituteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstituteCompleted(this, new GetInstituteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListUniversity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListUniversity(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListUniversity", new object[] {
                        connString,
                        keyword,
                        country,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListUniversityAsync(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListUniversityAsync(connString, keyword, country, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListUniversityAsync(string connString, string keyword, string country, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListUniversityOperationCompleted == null)) {
                this.GetListUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListUniversityOperationCompleted);
            }
            this.InvokeAsync("GetListUniversity", new object[] {
                        connString,
                        keyword,
                        country,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListUniversityOperationCompleted, userState);
        }
        
        private void OnGetListUniversityOperationCompleted(object arg) {
            if ((this.GetListUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListUniversityCompleted(this, new GetListUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListDiseases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListDiseases(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListDiseases", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListDiseasesAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListDiseasesAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListDiseasesAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListDiseasesOperationCompleted == null)) {
                this.GetListDiseasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListDiseasesOperationCompleted);
            }
            this.InvokeAsync("GetListDiseases", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListDiseasesOperationCompleted, userState);
        }
        
        private void OnGetListDiseasesOperationCompleted(object arg) {
            if ((this.GetListDiseasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListDiseasesCompleted(this, new GetListDiseasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListImpairments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListImpairments(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            object[] results = this.Invoke("GetListImpairments", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListImpairmentsAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression) {
            this.GetListImpairmentsAsync(connString, keyword, cancelledStatus, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListImpairmentsAsync(string connString, string keyword, string cancelledStatus, string sortOrderBy, string sortExpression, object userState) {
            if ((this.GetListImpairmentsOperationCompleted == null)) {
                this.GetListImpairmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListImpairmentsOperationCompleted);
            }
            this.InvokeAsync("GetListImpairments", new object[] {
                        connString,
                        keyword,
                        cancelledStatus,
                        sortOrderBy,
                        sortExpression}, this.GetListImpairmentsOperationCompleted, userState);
        }
        
        private void OnGetListImpairmentsOperationCompleted(object arg) {
            if ((this.GetListImpairmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListImpairmentsCompleted(this, new GetListImpairmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListDegreeLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListDegreeLevel(string connString) {
            object[] results = this.Invoke("GetListDegreeLevel", new object[] {
                        connString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListDegreeLevelAsync(string connString) {
            this.GetListDegreeLevelAsync(connString, null);
        }
        
        /// <remarks/>
        public void GetListDegreeLevelAsync(string connString, object userState) {
            if ((this.GetListDegreeLevelOperationCompleted == null)) {
                this.GetListDegreeLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListDegreeLevelOperationCompleted);
            }
            this.InvokeAsync("GetListDegreeLevel", new object[] {
                        connString}, this.GetListDegreeLevelOperationCompleted, userState);
        }
        
        private void OnGetListDegreeLevelOperationCompleted(object arg) {
            if ((this.GetListDegreeLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListDegreeLevelCompleted(this, new GetListDegreeLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListFaculty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListFaculty(string connString, string username, string systemGroup, string facultyId, string distinction) {
            object[] results = this.Invoke("GetListFaculty", new object[] {
                        connString,
                        username,
                        systemGroup,
                        facultyId,
                        distinction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListFacultyAsync(string connString, string username, string systemGroup, string facultyId, string distinction) {
            this.GetListFacultyAsync(connString, username, systemGroup, facultyId, distinction, null);
        }
        
        /// <remarks/>
        public void GetListFacultyAsync(string connString, string username, string systemGroup, string facultyId, string distinction, object userState) {
            if ((this.GetListFacultyOperationCompleted == null)) {
                this.GetListFacultyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListFacultyOperationCompleted);
            }
            this.InvokeAsync("GetListFaculty", new object[] {
                        connString,
                        username,
                        systemGroup,
                        facultyId,
                        distinction}, this.GetListFacultyOperationCompleted, userState);
        }
        
        private void OnGetListFacultyOperationCompleted(object arg) {
            if ((this.GetListFacultyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListFacultyCompleted(this, new GetListFacultyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListProgram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListProgram(string connString, string username, string systemGroup, string degreeLevel, string facultyId, string programId, string distinction) {
            object[] results = this.Invoke("GetListProgram", new object[] {
                        connString,
                        username,
                        systemGroup,
                        degreeLevel,
                        facultyId,
                        programId,
                        distinction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListProgramAsync(string connString, string username, string systemGroup, string degreeLevel, string facultyId, string programId, string distinction) {
            this.GetListProgramAsync(connString, username, systemGroup, degreeLevel, facultyId, programId, distinction, null);
        }
        
        /// <remarks/>
        public void GetListProgramAsync(string connString, string username, string systemGroup, string degreeLevel, string facultyId, string programId, string distinction, object userState) {
            if ((this.GetListProgramOperationCompleted == null)) {
                this.GetListProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListProgramOperationCompleted);
            }
            this.InvokeAsync("GetListProgram", new object[] {
                        connString,
                        username,
                        systemGroup,
                        degreeLevel,
                        facultyId,
                        programId,
                        distinction}, this.GetListProgramOperationCompleted, userState);
        }
        
        private void OnGetListProgramOperationCompleted(object arg) {
            if ((this.GetListProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListProgramCompleted(this, new GetListProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProgram(string connString, string programId) {
            object[] results = this.Invoke("GetProgram", new object[] {
                        connString,
                        programId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramAsync(string connString, string programId) {
            this.GetProgramAsync(connString, programId, null);
        }
        
        /// <remarks/>
        public void GetProgramAsync(string connString, string programId, object userState) {
            if ((this.GetProgramOperationCompleted == null)) {
                this.GetProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramOperationCompleted);
            }
            this.InvokeAsync("GetProgram", new object[] {
                        connString,
                        programId}, this.GetProgramOperationCompleted, userState);
        }
        
        private void OnGetProgramOperationCompleted(object arg) {
            if ((this.GetProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramCompleted(this, new GetProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListStudentRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListStudentRecords(
                    string connString, 
                    string username, 
                    string userlevel, 
                    string systemGroup, 
                    string reportName, 
                    string keyword, 
                    string degreeLevelId, 
                    string facultyId, 
                    string programId, 
                    string yearEntry, 
                    string yearGraduate, 
                    string classLevel, 
                    string entranceTypeId, 
                    string studentStatusTypeId, 
                    string studentStatusTypeGroup, 
                    string studentRecordsStatus, 
                    string distinctionStatus, 
                    string distinctionJoinStatus, 
                    string startAcademicYear, 
                    string endAcademicYear, 
                    string genderId, 
                    string nationalityId, 
                    string sortOrderBy, 
                    string sortExpression) {
            object[] results = this.Invoke("GetListStudentRecords", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        reportName,
                        keyword,
                        degreeLevelId,
                        facultyId,
                        programId,
                        yearEntry,
                        yearGraduate,
                        classLevel,
                        entranceTypeId,
                        studentStatusTypeId,
                        studentStatusTypeGroup,
                        studentRecordsStatus,
                        distinctionStatus,
                        distinctionJoinStatus,
                        startAcademicYear,
                        endAcademicYear,
                        genderId,
                        nationalityId,
                        sortOrderBy,
                        sortExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListStudentRecordsAsync(
                    string connString, 
                    string username, 
                    string userlevel, 
                    string systemGroup, 
                    string reportName, 
                    string keyword, 
                    string degreeLevelId, 
                    string facultyId, 
                    string programId, 
                    string yearEntry, 
                    string yearGraduate, 
                    string classLevel, 
                    string entranceTypeId, 
                    string studentStatusTypeId, 
                    string studentStatusTypeGroup, 
                    string studentRecordsStatus, 
                    string distinctionStatus, 
                    string distinctionJoinStatus, 
                    string startAcademicYear, 
                    string endAcademicYear, 
                    string genderId, 
                    string nationalityId, 
                    string sortOrderBy, 
                    string sortExpression) {
            this.GetListStudentRecordsAsync(connString, username, userlevel, systemGroup, reportName, keyword, degreeLevelId, facultyId, programId, yearEntry, yearGraduate, classLevel, entranceTypeId, studentStatusTypeId, studentStatusTypeGroup, studentRecordsStatus, distinctionStatus, distinctionJoinStatus, startAcademicYear, endAcademicYear, genderId, nationalityId, sortOrderBy, sortExpression, null);
        }
        
        /// <remarks/>
        public void GetListStudentRecordsAsync(
                    string connString, 
                    string username, 
                    string userlevel, 
                    string systemGroup, 
                    string reportName, 
                    string keyword, 
                    string degreeLevelId, 
                    string facultyId, 
                    string programId, 
                    string yearEntry, 
                    string yearGraduate, 
                    string classLevel, 
                    string entranceTypeId, 
                    string studentStatusTypeId, 
                    string studentStatusTypeGroup, 
                    string studentRecordsStatus, 
                    string distinctionStatus, 
                    string distinctionJoinStatus, 
                    string startAcademicYear, 
                    string endAcademicYear, 
                    string genderId, 
                    string nationalityId, 
                    string sortOrderBy, 
                    string sortExpression, 
                    object userState) {
            if ((this.GetListStudentRecordsOperationCompleted == null)) {
                this.GetListStudentRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListStudentRecordsOperationCompleted);
            }
            this.InvokeAsync("GetListStudentRecords", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        reportName,
                        keyword,
                        degreeLevelId,
                        facultyId,
                        programId,
                        yearEntry,
                        yearGraduate,
                        classLevel,
                        entranceTypeId,
                        studentStatusTypeId,
                        studentStatusTypeGroup,
                        studentRecordsStatus,
                        distinctionStatus,
                        distinctionJoinStatus,
                        startAcademicYear,
                        endAcademicYear,
                        genderId,
                        nationalityId,
                        sortOrderBy,
                        sortExpression}, this.GetListStudentRecordsOperationCompleted, userState);
        }
        
        private void OnGetListStudentRecordsOperationCompleted(object arg) {
            if ((this.GetListStudentRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListStudentRecordsCompleted(this, new GetListStudentRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListTransactionLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListTransactionLog(string connString, string username, string userlevel, string systemGroup, string reportName, string personId) {
            object[] results = this.Invoke("GetListTransactionLog", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        reportName,
                        personId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListTransactionLogAsync(string connString, string username, string userlevel, string systemGroup, string reportName, string personId) {
            this.GetListTransactionLogAsync(connString, username, userlevel, systemGroup, reportName, personId, null);
        }
        
        /// <remarks/>
        public void GetListTransactionLogAsync(string connString, string username, string userlevel, string systemGroup, string reportName, string personId, object userState) {
            if ((this.GetListTransactionLogOperationCompleted == null)) {
                this.GetListTransactionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListTransactionLogOperationCompleted);
            }
            this.InvokeAsync("GetListTransactionLog", new object[] {
                        connString,
                        username,
                        userlevel,
                        systemGroup,
                        reportName,
                        personId}, this.GetListTransactionLogOperationCompleted, userState);
        }
        
        private void OnGetListTransactionLogOperationCompleted(object arg) {
            if ((this.GetListTransactionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListTransactionLogCompleted(this, new GetListTransactionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserTypeStaffCompletedEventHandler(object sender, GetUserTypeStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserTypeStudentCompletedEventHandler(object sender, GetUserTypeStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLevelAdminCompletedEventHandler(object sender, GetUserLevelAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLevelAdminUserCompletedEventHandler(object sender, GetUserLevelAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLevelSuperUserCompletedEventHandler(object sender, GetUserLevelSuperUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelSuperUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelSuperUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLevelUserCompletedEventHandler(object sender, GetUserLevelUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserLevelGuestCompletedEventHandler(object sender, GetUserLevelGuestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelGuestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelGuestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAccountStudentSystemCompletedEventHandler(object sender, GetAccountStudentSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStudentSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStudentSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBlankCompletedEventHandler(object sender, GetBlankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CurrentDateCompletedEventHandler(object sender, CurrentDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConvertDateTHCompletedEventHandler(object sender, ConvertDateTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertDateTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertDateTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConvertTimeTHCompletedEventHandler(object sender, ConvertTimeTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertTimeTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertTimeTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConvertDateENCompletedEventHandler(object sender, ConvertDateENCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertDateENCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertDateENCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ThaiLongDateCompletedEventHandler(object sender, ThaiLongDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThaiLongDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThaiLongDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ThaiLongDateWithNumberTHCompletedEventHandler(object sender, ThaiLongDateWithNumberTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThaiLongDateWithNumberTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThaiLongDateWithNumberTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LongDateTHCompletedEventHandler(object sender, LongDateTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LongDateTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LongDateTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ShortDateTHCompletedEventHandler(object sender, ShortDateTHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShortDateTHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShortDateTHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalBMICompletedEventHandler(object sender, CalBMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalBMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalBMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void MeaningBMICompletedEventHandler(object sender, MeaningBMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeaningBMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeaningBMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetIPCompletedEventHandler(object sender, GetIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NumberArabicToThaiCompletedEventHandler(object sender, NumberArabicToThaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumberArabicToThaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NumberArabicToThaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StringReverseCompletedEventHandler(object sender, StringReverseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StringReverseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StringReverseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrdinalCompletedEventHandler(object sender, GetOrdinalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdinalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdinalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetHeaderContentTypeCompletedEventHandler(object sender, GetHeaderContentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeaderContentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeaderContentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConvertAsciiToStringCompletedEventHandler(object sender, ConvertAsciiToStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertAsciiToStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertAsciiToStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void XMLReplaceSpecialCharacterCompletedEventHandler(object sender, XMLReplaceSpecialCharacterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XMLReplaceSpecialCharacterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XMLReplaceSpecialCharacterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RoundStangCompletedEventHandler(object sender, RoundStangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoundStangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoundStangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalAgeCompletedEventHandler(object sender, CalAgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalAgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalAgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalcDateCompletedEventHandler(object sender, CalcDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApplicationPathCompletedEventHandler(object sender, GetApplicationPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConvertStrToDoubleCompletedEventHandler(object sender, ConvertStrToDoubleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertStrToDoubleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertStrToDoubleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FileSiteExistCompletedEventHandler(object sender, FileSiteExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileSiteExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileSiteExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePasscodeCompletedEventHandler(object sender, GeneratePasscodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePasscodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePasscodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFullNameCompletedEventHandler(object sender, GetFullNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EncodeToBase64CompletedEventHandler(object sender, EncodeToBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeToBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeToBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DecodeBase64ToStringCompletedEventHandler(object sender, DecodeBase64ToStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecodeBase64ToStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecodeBase64ToStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UppercaseFirstCompletedEventHandler(object sender, UppercaseFirstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UppercaseFirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UppercaseFirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExecuteCommandTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTransactionLogCompletedEventHandler(object sender, InsertTransactionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTransactionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTransactionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSystemPermissionCompletedEventHandler(object sender, GetSystemPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSystemDateEventCompletedEventHandler(object sender, GetSystemDateEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemDateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemDateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserStudentCompletedEventHandler(object sender, GetUserStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserStaffCompletedEventHandler(object sender, GetUserStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserStudentWithAuthenStaffCompletedEventHandler(object sender, GetUserStudentWithAuthenStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserStudentWithAuthenStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserStudentWithAuthenStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListYearEntryCompletedEventHandler(object sender, GetListYearEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListYearEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListYearEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRecordCountPersonCompletedEventHandler(object sender, GetRecordCountPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordCountPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordCountPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsPersonalCompletedEventHandler(object sender, GetPersonRecordsPersonalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsPersonalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsPersonalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsAddressCompletedEventHandler(object sender, GetPersonRecordsAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsEducationCompletedEventHandler(object sender, GetPersonRecordsEducationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsEducationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsEducationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsActivityCompletedEventHandler(object sender, GetPersonRecordsActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsHealthyCompletedEventHandler(object sender, GetPersonRecordsHealthyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsHealthyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsHealthyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsWorkCompletedEventHandler(object sender, GetPersonRecordsWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsFinancialCompletedEventHandler(object sender, GetPersonRecordsFinancialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsFinancialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsFinancialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPersonRecordsFamilyCompletedEventHandler(object sender, GetPersonRecordsFamilyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonRecordsFamilyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonRecordsFamilyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStudentRecordsCompletedEventHandler(object sender, GetStudentRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStudentRecordsToStudentCVCompletedEventHandler(object sender, GetStudentRecordsToStudentCVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentRecordsToStudentCVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentRecordsToStudentCVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStudentRecordsToHTMLCompletedEventHandler(object sender, GetStudentRecordsToHTMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentRecordsToHTMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentRecordsToHTMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TransferStudentRecordsToMUStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListTitlePrefixCompletedEventHandler(object sender, GetListTitlePrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListTitlePrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListTitlePrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListGenderCompletedEventHandler(object sender, GetListGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListNationalityCompletedEventHandler(object sender, GetListNationalityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListNationalityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListNationalityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListReligionCompletedEventHandler(object sender, GetListReligionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListReligionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListReligionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListBloodGroupCompletedEventHandler(object sender, GetListBloodGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListBloodGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListBloodGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListMaritalStatusCompletedEventHandler(object sender, GetListMaritalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListMaritalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListMaritalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListRelationshipCompletedEventHandler(object sender, GetListRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListAgencyCompletedEventHandler(object sender, GetListAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListEducationalLevelCompletedEventHandler(object sender, GetListEducationalLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListEducationalLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListEducationalLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListEducationalBackgroundCompletedEventHandler(object sender, GetListEducationalBackgroundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListEducationalBackgroundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListEducationalBackgroundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListEducationalMajorCompletedEventHandler(object sender, GetListEducationalMajorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListEducationalMajorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListEducationalMajorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListEntranceTypeCompletedEventHandler(object sender, GetListEntranceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListEntranceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListEntranceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListStudentStatusCompletedEventHandler(object sender, GetListStudentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListStudentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListStudentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListCountryCompletedEventHandler(object sender, GetListCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListProvinceCompletedEventHandler(object sender, GetListProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListDistrictCompletedEventHandler(object sender, GetListDistrictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListDistrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListDistrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListSubdistrictCompletedEventHandler(object sender, GetListSubdistrictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListSubdistrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListSubdistrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListInstituteCompletedEventHandler(object sender, GetListInstituteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListInstituteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListInstituteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInstituteCompletedEventHandler(object sender, GetInstituteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstituteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstituteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListUniversityCompletedEventHandler(object sender, GetListUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListDiseasesCompletedEventHandler(object sender, GetListDiseasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListDiseasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListDiseasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListImpairmentsCompletedEventHandler(object sender, GetListImpairmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListImpairmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListImpairmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListDegreeLevelCompletedEventHandler(object sender, GetListDegreeLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListDegreeLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListDegreeLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListFacultyCompletedEventHandler(object sender, GetListFacultyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListFacultyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListFacultyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListProgramCompletedEventHandler(object sender, GetListProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProgramCompletedEventHandler(object sender, GetProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListStudentRecordsCompletedEventHandler(object sender, GetListStudentRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListStudentRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListStudentRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetListTransactionLogCompletedEventHandler(object sender, GetListTransactionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListTransactionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListTransactionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591